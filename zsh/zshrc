# To operate 'ln -s ~/dotfiles/zsh/zshrc ~/.zshrc'
# if i ever want to i can erase my whole path with this
# export PATH="/usr/bin:/bin"

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

plugins=(
  asdf # installer like brew but dumber
  autojump
  git
  kubectl\
  zsh-autosuggestions # autosuggestions is the bomb dot com!!!
  zsh-syntax-highlighting # this lets you color code it allllllllll.... installed with git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
)

# Autocomplete color
export ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=100"

ZSH_THEME=steeef
# ZSH_THEME="robbyrussell"
# ZSH_THEME="Gnzh"

source $ZSH/oh-my-zsh.sh

source ~/dotfiles/zsh/config.zsh # IDK if this works but it seems like what i lifted from https://scriptingosx.com/2019/06/moving-to-zsh-part-3-shell-options/

# Preferred editor for local and remote sessions
if [[ -n $SSH_CONNECTION ]]; then
  export EDITOR='vim'
else
  export EDITOR='nvim'
fi

########## End ZSH

# aliases
# alias ctx=kubectx
alias gbr='gh pr view -w'
alias gbc='gh pr view --json url --jq ".url" | pbcopy'
alias dbc='osascript ~/dotfiles/osascripts/browser chrome'
alias dbf='osascript ~/dotfiles/osascripts/browser firefox'
alias dot='j dotfiles'
alias gpull='git pull'
alias k=kubectl
alias tf=terraform
alias zrf='source ~/.zshrc && echo "refreshed zsh profile!"'
alias zshrc='code ~/dotfiles; code ~/.zshrc && cd ~/dotfiles/zsh'
alias gitrc='code ~/dotfiles; code ~/.gitconfig && cd ~/dotfiles/git'
alias gbrowse='gh browse'
alias be='bundle exec'
alias pip3=~/.pyenv/shims/pip3.10
alias python3=~/.pyenv/shims/python3.10
alias gcauth="gcloud auth login --force --brief --update-adc"
alias ghpr="gh pr create"
alias syscat="tsh db login --db-name=catalog --db-user=inf-ro@tempus-teleport.iam inf-system-catalog-91e3b935 && tsh db connect inf-system-catalog-91e3b935"

# env vars
export AWS_PAGER="" # Disable weird aws cli thing
export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'
export TFENV_ARCH=amd64 # to spoof being on an amd machine
export PATH="$HOME/bin:$PATH" # adds ~/bin to the paths
export PATH="$HOME/dotfiles/bash:$PATH" # adds ~/dotfiles/bash to the paths
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH" # Adds ~/.krew to the paths
export KUBE_EDITOR="code -w" # kubernetes editor vim
export KUBECTL_EXTERNAL_DIFF="dyff between --omit-header --set-exit-code" # gives a pretty diff tool for kubectl
export PATH=$HOME/go/bin:$PATH
export PATH=$HOME/.asdf/shims:$PATH
export FLY_TARGET=main
export DOCKER_DEFAULT_PLATFORM=linux/amd64 # makes sure docker images get built.

# Libsonnet detection for autoform modules
mods=~/tempus/iac/autoform-modules
export mods=$mods
export AUTOFORM_MODULES=$mods
export JSONNET_PATH=$mods/jsonnet/concourse-libsonnet:$mods/jsonnet/tempus-libsonnet # this gets out of date so im just dropping it

eval "$(/opt/homebrew/bin/brew shellenv)"

# If set, this option causes globs which do not match a file to result in an error without running the command. If unset, the command is run with the un-expanded glob. prevents "no match found" error in tf
unsetopt NOMATCH

# gcloud SDK Autocompletions
source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"
source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"

# argo rollouts
# source <(kubectl-argo-rollouts completion zsh)


# prunes local branches git
# will not delete anything by itself instead do
# git-prune-local | xargs git branch -d
git-prune-local() {
  git branch -r | awk '{print $1}' | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk '{print $1}'
}

# up moves you up a directory
up() {
  local op=print
  [[ -t 1 ]] && op=cd
  case "$1" in
    '') up 1;;
    -*|+*) $op ~$1;;
    <->) $op $(printf '../%.0s' {1..$1});;
    *) local -a seg; seg=(${(s:/:)PWD%/*})
        local n=${(j:/:)seg[1,(I)$1*]}
        if [[ -n $n ]]; then
        $op /$n
        else
        print -u2 up: could not find prefix $1 in $PWD
        return 1
        fi
  esac
}

# drop lockfile and terraform dirs
def tfcleanlocal() {
    find . -type f -name ".terraform.lock.hcl" -delete
    find . -type d -name ".terraform" -prune -exec rm -rf {} \;
    find . -type f -name ".identity" -delete
}

# enable direnv globally
eval "$(direnv hook zsh)"

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

source <(kubectl completion zsh)
source <(fly completion --shell bash)

# # Enable mcfly CMD+R Rust thingy globally
# eval "$(mcfly init zsh)"

# enable asdf
source "$HOME/.asdf/asdf.sh"

# fzf gives autocompletions and a ton of nice stuff
# https://github.com/junegunn/fzf
# ypu can use FZF_DEFAULT_OPTS to set appearance but I didnt feel the need yet.
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# gpg cache gives you a way to have signed commits without having to type your password every time.
# it's wired into one password so that when you use the key from "gpg_key" label
# on the github password it will automatically pass the password to the terminal
# borrowed from https://bmaingret.github.io/blog/2022-02-15-1Password-gpg-git-seamless-commits-signing#getting-your-gpg-key-grip
gpg-cache() {
  op item get "github" --format json | jq -r '.fields.[] | select(.section.label == "gpg_key") | .value' | /opt/homebrew/Cellar/gnupg/2.4.5/libexec/gpg-preset-passphrase --preset A874FA3798BA87C5
}
# OMG this is so annoying so I disabled it and just made it a global function
# gpg_cache
